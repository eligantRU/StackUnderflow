[{"E:\\git_stupid\\stack_underflow\\src\\index.js":"1","E:\\git_stupid\\stack_underflow\\src\\App.js":"2","E:\\git_stupid\\stack_underflow\\src\\Footer.js":"3","E:\\git_stupid\\stack_underflow\\src\\Header.js":"4","E:\\git_stupid\\stack_underflow\\src\\Content.js":"5","E:\\git_stupid\\stack_underflow\\src\\Questions.js":"6","E:\\git_stupid\\stack_underflow\\src\\Pagination.js":"7","E:\\git_stupid\\stack_underflow\\src\\RichTextEditor.js":"8","E:\\git_stupid\\stack_underflow\\src\\SignUp.js":"9","E:\\git_stupid\\stack_underflow\\src\\SignIn.js":"10","E:\\git_stupid\\stack_underflow\\src\\Question.js":"11","E:\\git_stupid\\stack_underflow\\src\\redux\\reducers\\index.js":"12","E:\\git_stupid\\stack_underflow\\src\\redux\\reducers\\credentials.js":"13","E:\\git_stupid\\stack_underflow\\src\\redux\\actionTypes.js":"14","E:\\git_stupid\\stack_underflow\\src\\utils\\credentials.js":"15","E:\\git_stupid\\stack_underflow\\src\\utils\\question.js":"16","E:\\git_stupid\\stack_underflow\\src\\AskQuestion.js":"17","E:\\git_stupid\\stack_underflow\\src\\hooks\\useRefresh.js":"18","E:\\git_stupid\\stack_underflow\\src\\utils\\comment.js":"19","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\index.js":"20","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\Questions.js":"21","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\AskQuestion.js":"22","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\SignIn.js":"23","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\SignUp.js":"24","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\Question.js":"25","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\Account.js":"26","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\components\\Header.js":"27","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\components\\Footer.js":"28","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\redux\\reducers\\index.js":"29","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\components\\RichTextEditor.js":"30","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\redux\\actionTypes.js":"31","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\components\\Pagination.js":"32","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\api\\credentials.js":"33","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\api\\questions.js":"34","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\api\\answers.js":"35","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\hooks\\useRefresh.js":"36","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\redux\\reducers\\credentials.js":"37"},{"size":497,"mtime":1608861031518,"results":"38","hashOfConfig":"39"},{"size":363,"mtime":1608255350130,"results":"40","hashOfConfig":"39"},{"size":251,"mtime":1608255398158,"results":"41","hashOfConfig":"39"},{"size":1758,"mtime":1610708882580,"results":"42","hashOfConfig":"39"},{"size":1058,"mtime":1610570666887,"results":"43","hashOfConfig":"39"},{"size":1090,"mtime":1610664459066,"results":"44","hashOfConfig":"39"},{"size":2020,"mtime":1610577108580,"results":"45","hashOfConfig":"39"},{"size":969,"mtime":1610707255277,"results":"46","hashOfConfig":"39"},{"size":2485,"mtime":1610708882672,"results":"47","hashOfConfig":"39"},{"size":1720,"mtime":1610708882661,"results":"48","hashOfConfig":"39"},{"size":3626,"mtime":1610707869261,"results":"49","hashOfConfig":"39"},{"size":150,"mtime":1608678175225,"results":"50","hashOfConfig":"39"},{"size":714,"mtime":1610708882577,"results":"51","hashOfConfig":"39"},{"size":72,"mtime":1610708882657,"results":"52","hashOfConfig":"39"},{"size":1761,"mtime":1610663137395,"results":"53","hashOfConfig":"39"},{"size":867,"mtime":1610636372689,"results":"54","hashOfConfig":"39"},{"size":2180,"mtime":1610708882668,"results":"55","hashOfConfig":"39"},{"size":574,"mtime":1610662022665,"results":"56","hashOfConfig":"39"},{"size":750,"mtime":1610706151649,"results":"57","hashOfConfig":"39"},{"size":1908,"mtime":1612741280079,"results":"58","hashOfConfig":"59"},{"size":1045,"mtime":1612823576811,"results":"60","hashOfConfig":"59"},{"size":1780,"mtime":1612823576818,"results":"61","hashOfConfig":"59"},{"size":1946,"mtime":1612823466900,"results":"62","hashOfConfig":"59"},{"size":2760,"mtime":1612823466897,"results":"63","hashOfConfig":"59"},{"size":5511,"mtime":1612823576821,"results":"64","hashOfConfig":"59"},{"size":3266,"mtime":1612823466810,"results":"65","hashOfConfig":"59"},{"size":1854,"mtime":1612722573514,"results":"66","hashOfConfig":"59"},{"size":251,"mtime":1608255398158,"results":"67","hashOfConfig":"59"},{"size":150,"mtime":1608678175225,"results":"68","hashOfConfig":"59"},{"size":970,"mtime":1612723171990,"results":"69","hashOfConfig":"59"},{"size":72,"mtime":1610708882657,"results":"70","hashOfConfig":"59"},{"size":2021,"mtime":1612722573512,"results":"71","hashOfConfig":"59"},{"size":2800,"mtime":1612670838093,"results":"72","hashOfConfig":"59"},{"size":1904,"mtime":1612715339264,"results":"73","hashOfConfig":"59"},{"size":1528,"mtime":1612670838109,"results":"74","hashOfConfig":"59"},{"size":572,"mtime":1612823466890,"results":"75","hashOfConfig":"59"},{"size":909,"mtime":1611969566540,"results":"76","hashOfConfig":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"17m4eu9",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"79"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"mwtvrz",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"120"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\git_stupid\\stack_underflow\\src\\index.js",[],["156","157"],"E:\\git_stupid\\stack_underflow\\src\\App.js",[],"E:\\git_stupid\\stack_underflow\\src\\Footer.js",[],"E:\\git_stupid\\stack_underflow\\src\\Header.js",[],"E:\\git_stupid\\stack_underflow\\src\\Content.js",[],"E:\\git_stupid\\stack_underflow\\src\\Questions.js",[],"E:\\git_stupid\\stack_underflow\\src\\Pagination.js",[],"E:\\git_stupid\\stack_underflow\\src\\RichTextEditor.js",[],"E:\\git_stupid\\stack_underflow\\src\\SignUp.js",[],"E:\\git_stupid\\stack_underflow\\src\\SignIn.js",[],"E:\\git_stupid\\stack_underflow\\src\\Question.js",["158"],"import {useParams} from \"react-router-dom\";\r\nimport {Redirect} from \"react-router\";\r\nimport RichTextEditor from \"./RichTextEditor\";\r\n\r\nimport {getQuestion} from \"./utils/question\";\r\nimport {getAnswers, answerTheQuestion} from \"./utils/comment\";\r\nimport {useMemo, useState} from \"react\";\r\nimport useRefresh from \"./hooks/useRefresh\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport default function Question(props) {\r\n    const {questionId} = useParams();\r\n    const [question, setQuestion] = useState(null);\r\n    const [comments, setComments] = useState(null);\r\n    const [answer, setAnswer] = useState(null);\r\n    const [answersPassed, setAnswersPassed] = useState(0);\r\n    useMemo(() => getQuestion(questionId).then((question) => setQuestion(question[0])).catch(console.warn), [questionId]);\r\n    useMemo(() => getAnswers(questionId).then(setComments).catch(console.warn), [questionId, answersPassed]);\r\n\r\n    const refreshToken = useSelector((state) =>  state.credentialsReducer.refresh);\r\n    const withRefresh = useRefresh();\r\n\r\n    if (question === undefined)\r\n    {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n    if (question)\r\n    {\r\n        return (\r\n            <>\r\n                <h1>{question.title}</h1>\r\n                <h6>{question.owner_id__username} asks</h6>\r\n                <div\r\n                    dangerouslySetInnerHTML={{\r\n                        __html: question.description\r\n                    }}\r\n                    />\r\n                <ul>\r\n                    {\r\n                        comments && comments.map((comment, index) =>\r\n                            <li className=\"bg-light\" style={{\r\n                                    listStyleType: \"none\",\r\n                                }} key={index}>\r\n                                <div className=\"fw-bold\">{comment[\"username\"]}'s answer</div>\r\n                                <div\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: comment[\"text\"]\r\n                                    }}\r\n                                    />\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n                {!refreshToken && <div className=\"alert alert-warning\">Only authorized users can answer the question.</div>}\r\n                {\r\n                    refreshToken && (\r\n                        <div>\r\n                            <RichTextEditor onUpdate={setAnswer} key={answersPassed} />\r\n                            <div className=\"btn btn-lg btn-primary btn-block\"\r\n                                onClick={() => {\r\n                                    withRefresh()\r\n                                        .then((access) => answerTheQuestion(questionId, answer, access))\r\n                                        .then((response) => {\r\n                                            if (!response.ok) {\r\n                                                throw response;\r\n                                            }\r\n                                        })\r\n                                        .then(() => {\r\n                                            setAnswersPassed((value) => value + 1);\r\n\r\n                                        })\r\n                                        .catch((response) => {\r\n                                            console.warn(response);\r\n                                        });\r\n                                }}\r\n                            >Answer it!</div>\r\n                        </div>)\r\n                }\r\n            </>\r\n        );\r\n    }\r\n    return <></>;\r\n}\r\n","E:\\git_stupid\\stack_underflow\\src\\redux\\reducers\\index.js",[],"E:\\git_stupid\\stack_underflow\\src\\redux\\reducers\\credentials.js",[],"E:\\git_stupid\\stack_underflow\\src\\redux\\actionTypes.js",[],"E:\\git_stupid\\stack_underflow\\src\\utils\\credentials.js",[],"E:\\git_stupid\\stack_underflow\\src\\utils\\question.js",[],"E:\\git_stupid\\stack_underflow\\src\\AskQuestion.js",[],"E:\\git_stupid\\stack_underflow\\src\\hooks\\useRefresh.js",[],["159","160"],"E:\\git_stupid\\stack_underflow\\src\\utils\\comment.js",[],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\index.js",[],["161","162"],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\Questions.js",[],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\AskQuestion.js",[],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\SignIn.js",[],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\SignUp.js",[],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\Question.js",["163","164"],"import {useParams} from \"react-router-dom\";\r\nimport {Redirect} from \"react-router\";\r\nimport RichTextEditor from \"./components/RichTextEditor\";\r\n\r\nimport {getQuestion, markQuestionAsResolved} from \"./api/questions\";\r\nimport {getAnswers, answerTheQuestion, changeAnswerRating} from \"./api/answers\";\r\nimport {useMemo, useState} from \"react\";\r\nimport useRefresh from \"./hooks/useRefresh\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst RatingAction = { // TODO: move to API\r\n    LIKE: \"LIKE\",\r\n    DISLIKE: \"DISLIKE\",\r\n}\r\n\r\nexport default function Question(props) {\r\n    const {questionId} = useParams();\r\n    const [question, setQuestion] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [answer, setAnswer] = useState(null);\r\n    const [answersPassed, setAnswersPassed] = useState(0);\r\n    const [questionPassed, setQuestionPassed] = useState(0);\r\n    const withRefresh = useRefresh();\r\n    useMemo(() => getQuestion(questionId).then((question) => setQuestion(question)).catch(console.warn), [questionId, questionPassed]);\r\n    useMemo(() => {\r\n        const getAnswersFn = (optAccess = null) => getAnswers(questionId, optAccess).then(setComments);\r\n        withRefresh()\r\n            .then(getAnswersFn, () => getAnswersFn())\r\n            .catch(console.warn);\r\n    }, [questionId, answersPassed]);\r\n\r\n    const {\r\n        refresh: refreshToken,\r\n        id: userId\r\n    } = useSelector((state) =>  state.credentialsReducer);\r\n\r\n    const changeAnswerRatingHandler = (answerId, actionType) => {\r\n        const actionTypeToString = (actionType) => actionType;\r\n        withRefresh()\r\n            .then((access) => changeAnswerRating(answerId, actionTypeToString(actionType), access))\r\n            .then(() => setAnswersPassed((value) => value + 1))\r\n            .catch(console.warn);\r\n    };\r\n\r\n    if (question === undefined)\r\n    {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n    if (question)\r\n    {\r\n        const isAnswered = Number.isInteger(question.resolved_answer_id);\r\n        const isCurrUserQuestion = (question.owner_id === userId);\r\n        const answersBlock = (\r\n            <ul>\r\n                {\r\n                    comments && comments.map((comment, index) => // TODO: rating -> subcomponent\r\n                        <li className=\"bg-light\" style={{\r\n                                listStyleType: \"none\",\r\n                            }} key={index}>\r\n                            {refreshToken && <span style={{outline: comment.my_rate === 1 ? \"1px solid red\" : \"\"}} onClick={() => changeAnswerRatingHandler(comment.id, RatingAction.LIKE)}>👍</span>}\r\n                            <span>{comment.rating}</span>\r\n                            {refreshToken && <span style={{outline: comment.my_rate === -1 ? \"1px solid red\" : \"\"}} onClick={() => changeAnswerRatingHandler(comment.id, RatingAction.DISLIKE)}>👎</span>}\r\n                            {!isAnswered && isCurrUserQuestion && (<button\r\n                                onClick={() => {\r\n                                    withRefresh()\r\n                                        .then((access) => markQuestionAsResolved(questionId, comment.id, access))\r\n                                        .then(() => setQuestionPassed((value) => value + 1))\r\n                                        .catch(console.warn);\r\n                                }}\r\n                                >Mark as an answer</button>)}\r\n                            {(question.resolved_answer_id === comment.id) && <span className=\"text-success\">This is an answer!</span>}\r\n                            <div className=\"fw-bold\">{comment[\"username\"]}'s answer</div>\r\n                            <div\r\n                                dangerouslySetInnerHTML={{\r\n                                    __html: comment[\"text\"]\r\n                                }}\r\n                                />\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        );\r\n        const answerTheQuestionBlock = (() => {\r\n            if (refreshToken) {\r\n                if (isAnswered) {\r\n                    return <div className=\"alert alert-info\">This question is already answered.</div>;\r\n                }\r\n                return (\r\n                    <div>\r\n                        <RichTextEditor onUpdate={setAnswer} key={answersPassed} />\r\n                        <div className=\"btn btn-lg btn-primary btn-block\"\r\n                            onClick={() => {\r\n                                withRefresh()\r\n                                    .then((access) => answerTheQuestion(questionId, answer, access))\r\n                                    .then(() => setAnswersPassed((value) => value + 1))\r\n                                    .catch(console.warn);\r\n                            }}\r\n                        >Answer it!</div>\r\n                    </div>\r\n                );\r\n            } else {\r\n                return <div className=\"alert alert-warning\">Only authorized users can answer the question.</div>;\r\n            }\r\n        })();\r\n\r\n        return (\r\n            <>\r\n                <h1>{question.title}</h1>\r\n                <h6>{question.owner_id__username} asks</h6>\r\n                <div\r\n                    dangerouslySetInnerHTML={{\r\n                        __html: question.description\r\n                    }}\r\n                    />\r\n                {answersBlock}\r\n                {answerTheQuestionBlock}\r\n            </>\r\n        );\r\n    }\r\n    return <></>;\r\n}\r\n","E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\Account.js",[],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\components\\Header.js",[],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\components\\Footer.js",[],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\redux\\reducers\\index.js",[],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\components\\RichTextEditor.js",[],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\redux\\actionTypes.js",[],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\components\\Pagination.js",[],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\api\\credentials.js",[],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\api\\questions.js",[],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\api\\answers.js",[],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\hooks\\useRefresh.js",[],"E:\\git_stupid\\tmp\\StackUnderflow\\backend\\frontend\\src\\redux\\reducers\\credentials.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":18,"column":81,"nodeType":"171","endLine":18,"endColumn":108,"suggestions":"172"},{"ruleId":"165","replacedBy":"173"},{"ruleId":"167","replacedBy":"174"},{"ruleId":"165","replacedBy":"175"},{"ruleId":"167","replacedBy":"176"},{"ruleId":"169","severity":1,"message":"177","line":24,"column":106,"nodeType":"171","endLine":24,"endColumn":134,"suggestions":"178"},{"ruleId":"169","severity":1,"message":"179","line":30,"column":8,"nodeType":"171","endLine":30,"endColumn":35,"suggestions":"180"},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"react-hooks/exhaustive-deps","React Hook useMemo has an unnecessary dependency: 'answersPassed'. Either exclude it or remove the dependency array.","ArrayExpression",["183"],["181"],["182"],["181"],["182"],"React Hook useMemo has an unnecessary dependency: 'questionPassed'. Either exclude it or remove the dependency array.",["184"],"React Hook useMemo has a missing dependency: 'withRefresh'. Either include it or remove the dependency array.",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"186","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [questionId]",{"range":"191","text":"192"},{"range":"193","text":"192"},"Update the dependencies array to be: [withRefresh, questionId]",{"range":"194","text":"195"},[879,906],"[questionId]",[1025,1053],[1303,1330],"[withRefresh, questionId]"]